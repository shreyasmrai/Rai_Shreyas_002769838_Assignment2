/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Employee;
import model.EmployeeDatabase;

/**
 *
 * @author shreyasrai
 */
public class ReadJPanel extends javax.swing.JPanel {

    /**
     * Creates new form readJPanel
     */
    EmployeeDatabase employeeDatabase;
    private String imagePath;
    //private String date;
    public ReadJPanel(EmployeeDatabase employeeDatabase) {
        initComponents();
        
        this.employeeDatabase=employeeDatabase;
        displayEmp();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        empTable = new javax.swing.JTable();
        ViewButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jGender = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jEmployee_ID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLevel = new javax.swing.JTextField();
        jAge = new javax.swing.JTextField();
        jTeam_Info = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPosition = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jMobile = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jEmail = new javax.swing.JTextField();
        UpdateButton = new javax.swing.JButton();
        jSearch = new javax.swing.JLabel();
        jFilterText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jImage = new javax.swing.JPanel();
        jReadLabelImage = new javax.swing.JLabel();
        jBrowserRead = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jCreateButton = new javax.swing.JButton();
        jStart_Date = new javax.swing.JTextField();

        setBackground(new java.awt.Color(0, 153, 153));

        empTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Employee_ID", "Age", "Gender", "Start Date", "Level", "Team Information", "Position Title", "Mobile", "Email", "Photo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        empTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                empTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(empTable);

        ViewButton.setText("VIEW");
        ViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("DELETE");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("YuMincho +36p Kana", 3, 14)); // NOI18N
        jLabel9.setText("Team Info");

        jLabel10.setFont(new java.awt.Font("YuMincho +36p Kana", 3, 14)); // NOI18N
        jLabel10.setText("Email");

        jLabel11.setFont(new java.awt.Font("YuMincho +36p Kana", 3, 14)); // NOI18N
        jLabel11.setText("Mobile");

        jLabel12.setFont(new java.awt.Font("YuMincho +36p Kana", 3, 14)); // NOI18N
        jLabel12.setText("Photo");

        jLabel2.setFont(new java.awt.Font("YuMincho +36p Kana", 3, 14)); // NOI18N
        jLabel2.setText("Name");

        jGender.setForeground(new java.awt.Color(204, 204, 204));
        jGender.setText("MALE/FEMALE/OTHERS");
        jGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jGenderActionPerformed(evt);
            }
        });
        jGender.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jGenderKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("YuMincho +36p Kana", 3, 14)); // NOI18N
        jLabel3.setText("Employee_ID");

        jTextName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextNameActionPerformed(evt);
            }
        });
        jTextName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextNameKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("YuMincho +36p Kana", 3, 14)); // NOI18N
        jLabel4.setText("Age");

        jEmployee_ID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jEmployee_IDKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("YuMincho +36p Kana", 3, 14)); // NOI18N
        jLabel5.setText("Gender");

        jLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLevelActionPerformed(evt);
            }
        });

        jAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAgeActionPerformed(evt);
            }
        });
        jAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jAgeKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("YuMincho +36p Kana", 3, 14)); // NOI18N
        jLabel6.setText("Start Date");

        jPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPositionActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("YuMincho +36p Kana", 3, 14)); // NOI18N
        jLabel7.setText("Position Title");

        jMobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jMobileKeyPressed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("YuMincho +36p Kana", 3, 14)); // NOI18N
        jLabel8.setText("Level");

        jEmail.setForeground(new java.awt.Color(204, 204, 204));
        jEmail.setText("abc@xyz.com");
        jEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jEmailKeyPressed(evt);
            }
        });

        UpdateButton.setText("UPDATE");
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        jSearch.setText("Search");

        jFilterText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFilterTextActionPerformed(evt);
            }
        });
        jFilterText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFilterTextKeyReleased(evt);
            }
        });

        jLabel1.setToolTipText("");

        jLabel13.setFont(new java.awt.Font("YuMincho +36p Kana", 3, 24)); // NOI18N
        jLabel13.setText("EMPLOYEE DETAILS");

        javax.swing.GroupLayout jImageLayout = new javax.swing.GroupLayout(jImage);
        jImage.setLayout(jImageLayout);
        jImageLayout.setHorizontalGroup(
            jImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jImageLayout.createSequentialGroup()
                .addComponent(jReadLabelImage, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jImageLayout.setVerticalGroup(
            jImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jReadLabelImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
        );

        jBrowserRead.setText("Browse Image");
        jBrowserRead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBrowserReadActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Name", "Employee ID", "Mobile", "Email" }));

        jCreateButton.setText("CREATE");
        jCreateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCreateButtonActionPerformed(evt);
            }
        });

        jStart_Date.setForeground(new java.awt.Color(204, 204, 204));
        jStart_Date.setText("MM/DD/YY");
        jStart_Date.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jStart_DateKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel10))
                                .addGap(61, 61, 61)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jMobile)
                                    .addComponent(jPosition)
                                    .addComponent(jTeam_Info)
                                    .addComponent(jLevel)
                                    .addComponent(jEmail)
                                    .addComponent(jGender)
                                    .addComponent(jAge, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                    .addComponent(jEmployee_ID)
                                    .addComponent(jTextName)
                                    .addComponent(jBrowserRead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jStart_Date))
                                .addGap(190, 190, 190)
                                .addComponent(jImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jCreateButton)
                                        .addGap(55, 55, 55))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ViewButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(55, 55, 55)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(UpdateButton)
                                        .addGap(55, 55, 55)
                                        .addComponent(DeleteButton))
                                    .addComponent(jFilterText, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jAge, jEmail, jGender, jLevel, jMobile, jPosition, jTeam_Info});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFilterText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ViewButton)
                    .addComponent(UpdateButton)
                    .addComponent(DeleteButton)
                    .addComponent(jCreateButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jEmployee_ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jStart_Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jTeam_Info, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jBrowserRead))
                .addGap(56, 56, 56))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jAge, jEmail, jEmployee_ID, jFilterText, jGender, jLevel, jMobile, jPosition, jTeam_Info, jTextName});

    }// </editor-fold>//GEN-END:initComponents

    private void ViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewButtonActionPerformed
         //TODO add your handling code here:
        int selected = empTable.getSelectedRow();
        
        if(selected<0){
            JOptionPane.showMessageDialog(this, "Select The Row To View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) empTable.getModel();
        
        jTextName.setText(model.getValueAt(empTable.getSelectedRow(), 0).toString());
        jEmployee_ID.setText(model.getValueAt(empTable.getSelectedRow(), 1).toString());
        jAge.setText(model.getValueAt(empTable.getSelectedRow(), 2).toString());
        jGender.setText(model.getValueAt(empTable.getSelectedRow(), 3).toString());
        //jStartDate.setText(model.getValueAt(empTable.getSelectedRow(), 4).toString());
        
        jLevel.setText(model.getValueAt(empTable.getSelectedRow(), 5).toString());
        jTeam_Info.setText(model.getValueAt(empTable.getSelectedRow(), 6).toString());
        jPosition.setText(model.getValueAt(empTable.getSelectedRow(), 7).toString());
        jMobile.setText(model.getValueAt(empTable.getSelectedRow(), 8).toString());
        jEmail.setText(model.getValueAt(empTable.getSelectedRow(), 9).toString());

        ImageIcon icon = new ImageIcon(model.getValueAt(empTable.getSelectedRow(), 10).toString());
        Image i = icon.getImage().getScaledInstance(jReadLabelImage.getWidth(), jReadLabelImage.getHeight(), Image.SCALE_SMOOTH);
        jReadLabelImage.setIcon(new ImageIcon(i));
        
    }//GEN-LAST:event_ViewButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        int selected = empTable.getSelectedRow();
        
        if(selected<0){
            JOptionPane.showMessageDialog(this, "Select The Row To Delete");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) empTable.getModel();
        Employee selectedEmp = (Employee) model.getValueAt(selected, 0);
        
        employeeDatabase.deleteemp(selectedEmp);
        JOptionPane.showMessageDialog(this, "Entry Removed !!");
        
        displayEmp();
        jTextName.setText("");
        jEmployee_ID.setText("");
        jAge.setText("");
        jGender.setText("");
        jStart_Date.setText("");
        jLevel.setText("");
        jTeam_Info.setText("");
        jPosition.setText("");
        jMobile.setText("");
        jEmail.setText("");
        //jReadLabelImage.setText("");
        jReadLabelImage.setIcon(null);

    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void jGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jGenderActionPerformed

    private void jTextNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextNameActionPerformed

    private void jLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLevelActionPerformed

    private void jAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jAgeActionPerformed

    private void jPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPositionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPositionActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
         //TODO add your handling code here:
        int i = empTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) empTable.getModel();
        if(i >= 0)
        {           Employee emp = employeeDatabase.addNewEmployee();

            model.setValueAt(jTextName.getText(), i, 0);
            model.setValueAt(jEmployee_ID.getText(), i, 1);
            model.setValueAt(jAge.getText(), i, 2);
            model.setValueAt(jGender.getText(), i, 3);
           // model.setValueAt(jStartDate.setText(date), i, 4);
            model.setValueAt(jLevel.getText(), i, 5);
            model.setValueAt(jTeam_Info.getText(), i, 6);
            model.setValueAt(jPosition.getText(), i, 7);
            model.setValueAt(jMobile.getText(), i, 8);
            model.setValueAt(jEmail.getText(), i, 9);
            model.setValueAt(imagePath, i, 10);
           model.setValueAt(jReadLabelImage.getText(), i, 11);
           emp.setImage(imagePath);
           jScrollPane1.revalidate();
           jScrollPane1.repaint();
           
           Image displayImage = new ImageIcon(imagePath).getImage().getScaledInstance(jImage.getWidth(),jImage.getHeight(),Image.SCALE_SMOOTH);
            jReadLabelImage.setIcon(new ImageIcon(displayImage));
                        JOptionPane.showMessageDialog(this, "Updated Successfully !!");

        }
        else {
            JOptionPane.showMessageDialog(null, "Error");
        }
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void jFilterTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFilterTextKeyReleased
        // TODO add your handling code here:
        String query = jFilterText.getText().toLowerCase();
        
        filter(query);
    }//GEN-LAST:event_jFilterTextKeyReleased

    private void jFilterTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFilterTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFilterTextActionPerformed

    private void jBrowserReadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBrowserReadActionPerformed
        // TODO add your handling code here:
        JFileChooser browseImage = new JFileChooser();
        FileNameExtensionFilter nameExtension = new FileNameExtensionFilter("IMAGES","png","jpeg");
        browseImage.addChoosableFileFilter(nameExtension);
        int showOpenDialogue = browseImage.showOpenDialog(null);
        if (showOpenDialogue ==JFileChooser.APPROVE_OPTION) {
            File selectedImageFile = browseImage.getSelectedFile();
            imagePath = selectedImageFile.getAbsolutePath();
            JOptionPane.showMessageDialog(null, imagePath);
            
            //Display
            Image displayImage = new ImageIcon(imagePath).getImage().getScaledInstance(jImage.getWidth(),jImage.getHeight(),Image.SCALE_SMOOTH);
            jReadLabelImage.setIcon(new ImageIcon(displayImage));
        }
    }//GEN-LAST:event_jBrowserReadActionPerformed

    private void jCreateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCreateButtonActionPerformed
        // TODO add your handling code here:
                //DefaultTableModel model = (DefaultTableModel) empTable.getModel();
                        //DefaultTableModel model = (DefaultTableModel) empTable.getModel();


        Employee emp = employeeDatabase.addNewEmployee();
        
        emp.setName(jTextName.getText());
        emp.setEmployee_id(jEmployee_ID.getText());
        emp.setAge(Integer.parseInt(jAge.getText()));
        emp.setGender(jGender.getText());
        emp.setStart_date(jStart_Date.getText());
        /**SimpleDateFormat sdf =new SimpleDateFormat("MM-DD-YYYY");
        String date = sdf.format(jStart_Date.);**/
        emp.setLevel(jLevel.getText());
        emp.setTeam_info(jTeam_Info.getText());
        emp.setPosition(jPosition.getText());
        emp.setMobile(Integer.parseInt(jMobile.getText()));
        emp.setEmail(jEmail.getText());
        emp.setImage(imagePath);
        
        //Image displayImage = new ImageIcon(imagePath).getImage().getScaledInstance(jImage.getWidth(),jImage.getHeight(),Image.SCALE_SMOOTH);
        //jReadLabelImage.setIcon(new ImageIcon(displayImage));
         
        //Validation CHeck
        displayEmp();
        if(jTextName.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Name cannot be Null !!");
        }
        if(jEmployee_ID.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Employee ID cannot be Null !!");
        }
        if(jGender.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Gender  cannot be Null !!");
        }
        if(jMobile.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Mobile Number  cannot be Null !!");
        }
        if(jEmail.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Email address  cannot be Null !!");
        }
        if(jPosition.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Position  cannot be Null !!");
        }
        if(jTeam_Info.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Team Info  cannot be Null !!");
        }
        if(jLevel.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Level  cannot be Null !!");
        }
        if(jAge.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Age  cannot be Null !!");
        }
        /**if(jStartDate.getText().trim().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Start Date  cannot be Null !!");
        }**/
        if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", jEmail.getText()))) 
            {
            JOptionPane.showMessageDialog(null, "Email address is invalid", "Error", JOptionPane.ERROR_MESSAGE);
            }
        
        JOptionPane.showMessageDialog(this, "Information Saved Successfully !!");
        jTextName.setText("");
        jEmployee_ID.setText("");
        jAge.setText("");
        jGender.setText("");
        jStart_Date.setText("");
        //jStart_Date.setDate(null);
        jLevel.setText("");
        jTeam_Info.setText("");
        jPosition.setText("");
        jMobile.setText("");
        jEmail.setText("");
        //jPhoto.setText("");
        jReadLabelImage.setIcon(null);
        
        
        
    }//GEN-LAST:event_jCreateButtonActionPerformed

    private void jTextNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextNameKeyTyped
        // TODO add your handling code here:
         char invalidInput=evt.getKeyChar();
        if(Character.isLetter(invalidInput)||Character.isWhitespace(invalidInput)){
            jTextName.setEditable(true);
        }
        else{
          JOptionPane.showMessageDialog(null, "Please Enter characters only");
    } 
    }//GEN-LAST:event_jTextNameKeyTyped

    private void jEmployee_IDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jEmployee_IDKeyPressed
        // TODO add your handling code here:
        char invalidInput=evt.getKeyChar();
        if(Character.isLetter(invalidInput)){
            
                    JOptionPane.showMessageDialog(null, "INVALID INPUT!!");
        }
    }//GEN-LAST:event_jEmployee_IDKeyPressed

    private void jAgeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jAgeKeyPressed
        // TODO add your handling code here:
         char invalidInput=evt.getKeyChar();
        if(Character.isLetter(invalidInput)){
            
                    JOptionPane.showMessageDialog(null, "INVALID INPUT!!");
        } 
    }//GEN-LAST:event_jAgeKeyPressed

    private void jMobileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jMobileKeyPressed
        // TODO add your handling code here:
         char invalidInput=evt.getKeyChar();
        if(Character.isLetter(invalidInput)){
            
                    JOptionPane.showMessageDialog(null, "INVALID INPUT!!");
        }
    }//GEN-LAST:event_jMobileKeyPressed

    private void empTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_empTableMouseClicked
        // TODO add your handling code here:
           int selected = empTable.getSelectedRow();
        
        if(selected<0){
            JOptionPane.showMessageDialog(this, "Select The Row To View");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) empTable.getModel();
        
        jTextName.setText(model.getValueAt(empTable.getSelectedRow(), 0).toString());
        jEmployee_ID.setText(model.getValueAt(empTable.getSelectedRow(), 1).toString());
        jAge.setText(model.getValueAt(empTable.getSelectedRow(), 2).toString());
        jGender.setText(model.getValueAt(empTable.getSelectedRow(), 3).toString());
        //jStartDate.setText(model.getValueAt(empTable.getSelectedRow(), 4).toString());
        
        jLevel.setText(model.getValueAt(empTable.getSelectedRow(), 5).toString());
        jTeam_Info.setText(model.getValueAt(empTable.getSelectedRow(), 6).toString());
        jPosition.setText(model.getValueAt(empTable.getSelectedRow(), 7).toString());
        jMobile.setText(model.getValueAt(empTable.getSelectedRow(), 8).toString());
        jEmail.setText(model.getValueAt(empTable.getSelectedRow(), 9).toString());
        
        
        
        
        /**Employee selectedEmp = (Employee) model.getValueAt(selected, 0);
        
        jTextName.setText(selectedEmp.getName());
        jEmployee_ID.setText(selectedEmp.getEmployee_id());
        jAge.setText(String.valueOf(selectedEmp.getAge()));
        jGender.setText(selectedEmp.getGender());
        jStart_Date.setText(selectedEmp.getStart_date());
        jLevel.setText(selectedEmp.getLevel());
        jTeam_Info.setText(selectedEmp.getTeam_info());
        jPosition.setText(selectedEmp.getPosition());
        jMobile.setText(String.valueOf(selectedEmp.getMobile()));
        jEmail.setText(selectedEmp.getEmail());
        //jPhoto.setText(employee.getPhoto());
      //Image displayImage = new ImageIcon(imagePath).getImage().getScaledInstance(jImage.getWidth(),jImage.getHeight(),Image.SCALE_SMOOTH);

        Image displayImage = new ImageIcon(selectedEmp.getImage()).getImage().getScaledInstance(jImage.getWidth(),jImage.getHeight(),Image.SCALE_SMOOTH);
        jReadLabelImage.setIcon(new ImageIcon(displayImage));**/
       
        ImageIcon icon = new ImageIcon(model.getValueAt(empTable.getSelectedRow(), 10).toString());
        Image i = icon.getImage().getScaledInstance(jReadLabelImage.getWidth(), jReadLabelImage.getHeight(), Image.SCALE_SMOOTH);
        jReadLabelImage.setIcon(new ImageIcon(i));
    }//GEN-LAST:event_empTableMouseClicked

    private void jStart_DateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jStart_DateKeyPressed
        // TODO add your handling code here:
        if(jStart_Date.getForeground()!=Color.BLACK){
            if(jStart_Date.getText().equals("MM/DD/YY")){
                jStart_Date.setText("");
            }
        }
        jStart_Date.setForeground(Color.BLACK);
        
    }//GEN-LAST:event_jStart_DateKeyPressed

    private void jGenderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jGenderKeyPressed
        // TODO add your handling code here:
        if(jGender.getForeground()!=Color.BLACK){
            if(jGender.getText().equals("MALE/FEMALE/OTHERS")){
                jGender.setText("");
            }
        }
        jGender.setForeground(Color.BLACK);
    }//GEN-LAST:event_jGenderKeyPressed

    private void jEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jEmailKeyPressed
        // TODO add your handling code here:abc@xyz.com
        if(jEmail.getForeground()!=Color.BLACK){
            if(jEmail.getText().equals("abc@xyz.com")){
                jEmail.setText("");
            }
        }
        jEmail.setForeground(Color.BLACK);
    }//GEN-LAST:event_jEmailKeyPressed
    private void filter(String query)
    {
        DefaultTableModel model = (DefaultTableModel) empTable.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(model);
        empTable.setRowSorter(trs);
        
        trs.setRowFilter(RowFilter.regexFilter(query));
        
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JButton ViewButton;
    private javax.swing.JTable empTable;
    private javax.swing.JTextField jAge;
    private javax.swing.JButton jBrowserRead;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JButton jCreateButton;
    private javax.swing.JTextField jEmail;
    private javax.swing.JTextField jEmployee_ID;
    private javax.swing.JTextField jFilterText;
    private javax.swing.JTextField jGender;
    private javax.swing.JPanel jImage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jLevel;
    private javax.swing.JTextField jMobile;
    private javax.swing.JTextField jPosition;
    private javax.swing.JLabel jReadLabelImage;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jSearch;
    private javax.swing.JTextField jStart_Date;
    private javax.swing.JTextField jTeam_Info;
    private javax.swing.JTextField jTextName;
    // End of variables declaration//GEN-END:variables

   private void displayEmp() {
      
       DefaultTableModel model = (DefaultTableModel) empTable.getModel();
       model.setRowCount(0);
       
       for(Employee emp : employeeDatabase.getEmployeeDatabase()){
           
           Object[] row1 = new Object[11];
           row1[0] = emp;
           //row1[0] = emp.getName();
           row1[1] = emp.getEmployee_id();
           row1[2] = emp.getAge();
           row1[3] = emp.getGender();
           row1[4] = emp.getStart_date();
           row1[5] = emp.getLevel();
           row1[6] = emp.getTeam_info();
           row1[7] = emp.getPosition();
           row1[8] = emp.getMobile();
           row1[9] = emp.getEmail();
           row1[10] = emp.getImage();
           
           model.addRow(row1);
       }
       
     /**   jName.setText(employeeDatabase.getName());
        jEmployee_ID.setText(employeeDatabase.getEmployee_id());
        jAge.setText(String.valueOf(employeeDatabase.getAge()));
        jGender.setText(employeeDatabase.getGender());
        jStart_Date.setText(employeeDatabase.getStart_date());
        jLevel.setText(employeeDatabase.getLevel());
        jTeam_Info.setText(employeeDatabase.getTeam_info());
        jPosition.setText(employeeDatabase.getPosition());
        jMobile.setText(String.valueOf(employeeDatabase.getMobile()));
        jEmail.setText(employeeDatabase.getEmail());
        //jPhoto.setText(employee.getPhoto());**/
    }
}




                              

